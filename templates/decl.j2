{% set kind = kind_of_decl(decl) %}
<div class="decl" id="{{ decl.name }}">
<div class="{{ kind }}{{ " meta" if decl.is_meta }}{{ " noncomputable" if decl.noncomputable_reason }}{{ " sorried" if decl.sorried }}">

<div class="gh_link"><a href="{{ library_link(decl.filename, decl.line) }}">source</a></div>

{% if decl.attributes | length %}
    <div class="attributes">@[{{ ', '.join(decl.attributes) }}]</div>
{% endif %}

<div class="decl_header">
    {% include "decl_header.j2" %}
</div>

{% if decl.structure_fields | length %}
    <ul class="structure_fields" id="{{ decl.name }}.mk">
        {% for name, tp in decl.structure_fields %}
            {% set field_name = name.split('.')[-1] %}
            <li class="structure_field" id="{{name}}">{{field_name}} : {{ tp | linkify_efmt }}</li>
        {% endfor %}
    </ul>
{% endif %}

{% if decl.constructors | length %}
    <ul class="constructors">
        {% for name, tp in decl.constructors %}
            {% set ctor_name = name.split('.')[-1] %}
            <li class="constructor" id="{{name}}">{{ctor_name}} : {{ tp | linkify_efmt }}</li>
        {% endfor %}
    </ul>
{% endif %}

{{ decl.doc_string | convert_markdown }}

{% if decl.informal_statement %}

<details open>
    <summary>Informal translation</summary>

    <div class="informal_statement">
        <div class="statement">
            {{ decl.informal_statement | convert_markdown }}
        </div>

        <div class="translation_qs">
            This translation to informal mathematics is automatically generated and should NOT be trusted!
            The translation is a <a href="">beta feature powered by OpenAI's Codex API</a>.
            <br>
            Does this translation look correct?
            <form action="https://lean-chat.deno.dev/doc-gen?digest={{decl.informal_statement_digest}}" method="post">
              <button type="submit" name="rate" value="yes">Yes</button>
              <button type="submit" name="rate" value="no">No</button>
            </form>
        </div>
    </div>
</details>

{% endif %}

{% if decl.equations | length %}
    <details>
        <summary>Equations</summary>
        <ul class="equations">
            {% for eqn in decl.equations %}
                <li class="equation">{{ eqn | linkify_efmt }}</li>
            {% endfor %}
        </ul>
    </details>
{% endif %}

{% if decl.name in instances %}
    <details class="instances">
        <summary>Instances of this typeclass</summary>
        <ul>
            {% for inst in instances[decl.name] %}
                <li>{{ inst | linkify }}</li>
            {% endfor %}
        </ul>
    </details>
{% endif %}

{% if decl.name in instances_for %}
    <details class="instances-for">
        {% if decl.name in instances %}
            <summary>Instances of other typeclasses for <code>{{ decl.name | htmlify_name }}</code></summary>
        {% else %}
            <summary>Instances for <code>{{ decl.name | htmlify_name }}</code></summary>
        {% endif %}
        <ul>
            {% for inst in instances_for[decl.name] %}
                <li>{{ inst | linkify }}</li>
            {% endfor %}
        </ul>
    </details>
{% endif %}

{% if "↥" + decl.name in instances_for %}
    <details class="instances-for">
        <summary>Instances for <code>↥{{ decl.name | htmlify_name }}</code></summary>
        <ul>
            {% for inst in instances_for["↥" + decl.name] %}
                <li>{{ inst | linkify }}</li>
            {% endfor %}
        </ul>
    </details>
{% endif %}

{% if decl.sorried %}
    <p class="sorry_msg"><strong>Note:</strong> this declaration is incomplete and uses <code>sorry</code>.</p>
{% endif %}
</div>
</div>
